# <문제> 효율적인 화폐 구성: 문제 설명
# N가지 종류의 화폐가 있습니다.
# 이 화폐들의 개수를 최소한으로 이용해서 그 가치의 합이 M원이 되도록 하려고 합니다.
# 이때 각 종류의 화폐는 몇 개라도 사용할 수 있습니다.
# 예를 들어 2원, 3원 단위의 화폐가 있을 때는 15원을 만들기 위해 3원을 5개 사용하는 것이 최소한의 화폐 개수입니다.
# M원을 만들기 위한 최소한의 화폐 개수를 출력하는 프로그램을 작성하세요.

n, m = 2, 15
coin = [2, 3]

# [문제 해결 아이디어]
# ai = 금액 i를 만들 수 있는 최소한의 화폐 개수
# k = 각 화폐의 단위
# 점화식: 각 화폐 단위인 k를 하나씩 확인하며
#   - ai-k를 만드는 방법이 존재하는 경우, ai = min(ai, ai-k + 1)
#   - ai-k를 만드는 방법이 존재하지 않는 경우, ai = INF

n, m = 2, 15
array = [2, 3]
INF = float("inf")
d = [INF] * (m+1)
d[0] = 0
for i in range(n):
    for j in range(array[i], m+1):
        if d[j-array[i]] != INF: # (i-k)원을 만드는 방법이 존재하는 경우
            d[j] = min(d[j], d[j-array[i]] + 1)

if d[m] == INF:
    print(-1)
else:
    print(d[m])