# <문제> 왕실의 나이트: 문제 설명
# 왕실 정원은 체스판과 같은 8 * 8 좌표 평면입니다.
# 왕실 정원의 특정한 한 칸에 나이트가 서 있습니다.
# 나이트는 말을 타고 있기 때문에 이동할 때 L자 형태로만 이동할 수 있으며 정원 밖으로는 나갈 수 없습니다.
# 나이트는 특정 위치에서 다음과 같은 2가지 경우로 이동할 수 있습니다.
#   1. 수평으로 두 칸 이동한 뒤에 수직으로 한 칸 이동하기
#   2. 수직으로 두 칸 이동한 뒤에 수평으로 한 칸 이동하기
# 행은 1-8, 열은 a-h로 표현된다.
# 입력이 a1과 같이 주어졌을 때, 나이트가 이동할 수 있는 경우의 수를 출력하시오.

n = "d4"
m = 8
st = ["a","b","c","d",'e','f','g','h']
num = [1,2,3,4,5,6,7,8]
count = 0
x, y = 0, 0
for i in range(len(st)):
    if n[0] in st[i]:
        y = num[i]
        break
x = int(n[1])
dx = [-2, -2, -1, -1, 1, 1, 2, 2]
dy = [-1, 1, -2, 2, -2, 2, -1, 1]
for i in range(len(dx)):
    nx = x + dx[i]
    ny = y + dy[i]
    if nx < 1 or ny < 1 or nx >= m or ny >= m:
        continue
    else:
        count += 1
print(count)

# [문제 해결 아이디어]
# 요구 사항대로 충실히 구현하면 되는 문제이다.
# 나이트의 8가지 경로를 하나씩 확인하며 각 위치로 이동이 가능하지 확인합니다.
#   - 리스트를 이용하여 8가지 방향에 대한 방향 벡터를 정의합니다.

# 해답
# 현재 나이트의 위치 입력받기
n = "d4"
row = int(n[1])
column = int(ord(n[0])) - int(ord("a")) + 1
# 나이트가 이동할 수 있는 8가지 방향 정의
steps = [(-2, -1), (-1, -2), (1, -2), (2, -1), (2, 1), (1, 2), (-1, 2), (-2, 1)]
# 8가지 방향에 대하여 각 위치로 이동이 가능한지 확인
result = 0
for step in steps:
    # 이동하고자 하는 위치 확인
    next_row = row + step[0]
    next_column = column + step[1]
    # 해당 위치로 이동이 가능하다면 카운트 증가
    if next_row >= 1 and next_row <= 8 and next_column >= 1 and next_column <= 8:
        result += 1
print(result)